%{

%}
quotes [""'']
comment ("//".*)
comment2 ("/*".*"*/")
%%

public|private|protected {printf("The %s : is a Access specifier\n",yytext);}
class|System|out|println|void|main|static {printf("The %s : is a Keyword\n",yytext);}
int|double|char|String {printf("The %s : is a DataType\n",yytext);}
[A-Z]+[a-z]* {printf("The %s : is a Class-Name\n",yytext);}
[A-Z]*[a-z]+ {printf("The %s : is a Variable\n",yytext);}
"+"|"-"|"<"|">"|"!"|"%"|"&"|"^"|"*"|"?"|"=" {printf("The %s : is a Operator\n",yytext);}
"["|"]"|"{"|"}"|"("|")"  {printf("The %s : is a Bracket\n",yytext);}
","|"."|":"|";" {printf("The %s : is a Delimiter\n",yytext);}
[0-9]+ {printf("The %s : is a Number\n",yytext);}
{quotes} {printf("The %s : is a Quote\n",yytext);}
{comment} {printf("The %s : is a Single line Comment\n",yytext);}
{comment2} {printf("The %s : is a Multiline Comment\n",yytext);}
%%
main(argc,argv)
int argc;
char **argv;
{
	if(argc >1){
		FILE *file;
		file=fopen(argv[1],"r");
		if(!file){
			fprintf(stderr,"Could not open %s\n",argv[1]);
			exit(1);
		}
		yyin=file;
	}
	yylex();

	
}
int yywrap(){
 return 1;
}



Round Robin

import java.util.*;
public class RR {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the no. of process");
		int np=sc.nextInt();
		int pid[]=new int[np]; //process ids
		int at[]=new int[np];	//arrival time
		int bt[]=new int[np];	//burst time
		int wt[]=new int[np];	//waiting time
		int tt[]=new int[np];	//total time
		int ct[]=new int[np];	//completion time
		int rt[]=new int[np];	//round time
		int f[]=new int[np];
		int quantum,avgtt=0,avgwt=0;

		for(int i=0;i<np;i++)
		{
			pid[i]=i+1;
			System.out.println("Enter process "+(i+1)+"  arrival time");
			at[i]=sc.nextInt();
			System.out.println("Enter process "+(i+1)+"  burst time");
			bt[i]=sc.nextInt();
			rt[i]=bt[i];
			f[i]=0;
		}
		System.out.println("Enter the time quantum");
		quantum=sc.nextInt();
		int total=0,st=0;
		while(true)
		{
			int min=99,c=np;
			if(total==np)
				break;
			
			for(int i=0;i<np;i++)
			{
				if(at[i]<=st && f[i]==0)
				{
					c=i;
					if(rt[i]>quantum)
					{
						rt[i]-=quantum;
						st+=quantum;
					}
					else
					{
						st+=rt[i];
						ct[i]=st;
						rt[i]=0;
						f[i]=1;
						total++;
					}
					
				}
			}
			if(c==np)
				st++;
		}
		
		for(int i=0;i<np;i++)
		{
			tt[i]=ct[i]-at[i];
			wt[i]=tt[i]-bt[i];
			avgtt+=tt[i];
			avgwt+=wt[i];
		}
		
		System.out.println("\n pid    Arrival    Burst    Completion    Turnaround    Waiting");
		for(int i=0;i<np;i++)
		{
			System.out.println("\n "+pid[i]+"         "+at[i]+"         "+bt[i]+"           "+ct[i]+"            "+tt[i]+"           "+wt[i]);
		}
		
		System.out.println("\n Average Waiting time"+avgwt/np);
		System.out.println("\n Average tt time"+avgtt/np);

	}
}



